{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card-game/./src/render.ts","webpack://card-game/./src/game.ts","webpack://card-game/./src/index.ts"],"sourcesContent":["import { CardsObject, ScreensTemplate } from './types';\r\n\r\nexport default class GameRender {\r\n   container: HTMLElement | null = document.getElementById('container');\r\n   cardsByDifficulty: number[] = [3, 6, 12];\r\n   difficultyForm: HTMLElement | null = null;\r\n   templateItem: HTMLElement | null = null;\r\n   clone: HTMLElement | null = null;\r\n   gameScreen: HTMLElement | null = null;\r\n   resultScreen: HTMLElement | null = null;\r\n   cardField: HTMLElement | null = null;\r\n   static templateCard: {\r\n      dignity: string;\r\n      suit: { name: string; src: string; srcBigIcon: string };\r\n   }[];\r\n\r\n   checkGameStatus() {\r\n      if (window.game.status === 'start') {\r\n         this.renderScreen('template-difficulty');\r\n         this.difficultyForm = document.getElementById('difficulty-form');\r\n\r\n         if (this.difficultyForm) {\r\n            this.difficultyForm.classList.remove('game__difficulty_hidden');\r\n         }\r\n      }\r\n\r\n      if (window.game.status === 'game') {\r\n         this.renderScreen('template-difficulty');\r\n      }\r\n   }\r\n\r\n   renderScreen(templateName: ScreensTemplate) {\r\n      this.templateItem = document.getElementById(templateName);\r\n      if (\r\n         this.templateItem &&\r\n         this.templateItem instanceof HTMLTemplateElement\r\n      ) {\r\n         this.clone = this.templateItem.content.cloneNode(true) as HTMLElement;\r\n      }\r\n      if (this.container && this.clone) {\r\n         this.container.appendChild(this.clone);\r\n      }\r\n   }\r\n\r\n   startGame() {\r\n      this.difficultyForm = document.getElementById('difficulty-form');\r\n      if (this.difficultyForm) {\r\n         this.difficultyForm.classList.add('game__difficulty_hidden');\r\n      }\r\n      window.game.status = 'game';\r\n\r\n      this.renderScreen('template-game');\r\n\r\n      this.renderCard();\r\n   }\r\n\r\n   renderResultScreen() {\r\n      this.renderScreen('template-result');\r\n   }\r\n\r\n   restartGame() {\r\n      window.game.status === 'start';\r\n\r\n      this.difficultyForm = document.getElementById('difficulty-form');\r\n\r\n      if (this.difficultyForm) {\r\n         this.difficultyForm.classList.remove('game__difficulty_hidden');\r\n      }\r\n\r\n      this.gameScreen = document.getElementById('screen-game');\r\n      this.resultScreen = document.getElementById('screen-result');\r\n\r\n      if (window.game.status === 'game' && this.gameScreen) {\r\n         this.gameScreen.remove();\r\n         if (this.resultScreen) {\r\n            this.resultScreen.remove();\r\n         }\r\n      }\r\n   }\r\n\r\n   createCard(\r\n      dignityValue: string,\r\n      smallIcon: string,\r\n      bigIcon: string,\r\n      suitName: string\r\n   ) {\r\n      const checkDataSetId = () => {\r\n         const datIdName = suitName + dignityValue;\r\n         return document.getElementById(datIdName)\r\n            ? datIdName + 'double'\r\n            : datIdName;\r\n      };\r\n\r\n      const addClass = (classArray: string[], element: HTMLElement | null) => {\r\n         if (classArray.length === 1 && element) {\r\n            element.classList.add(classArray[0]);\r\n         } else {\r\n            if (element) {\r\n               element.classList.add(...classArray);\r\n            }\r\n         }\r\n      };\r\n\r\n      const addDataAttrs = (\r\n         objectOfAttrs: Record<string, string>,\r\n         element: HTMLElement | null\r\n      ) => {\r\n         for (let key in objectOfAttrs) {\r\n            if (element) {\r\n               element.dataset[key] =\r\n                  objectOfAttrs[key as keyof typeof objectOfAttrs];\r\n            }\r\n         }\r\n      };\r\n\r\n      const addStyle = (\r\n         objectOfStyles: Record<string, string>,\r\n         element: HTMLElement | null\r\n      ) => {\r\n         for (let key in objectOfStyles) {\r\n            if (element) {\r\n               element.dataset[key] = objectOfStyles[key];\r\n            }\r\n         }\r\n      };\r\n\r\n      const addId = (element: HTMLElement | null, idValue: string) => {\r\n         if (element) {\r\n            element.id = idValue;\r\n         }\r\n      };\r\n\r\n      const addSrc = (srcValue: string, element: HTMLImageElement) => {\r\n         element.src = srcValue;\r\n      };\r\n\r\n      const addTextContent = (\r\n         textContentValue: string,\r\n         element: HTMLElement | null\r\n      ) => {\r\n         if (element) {\r\n            element.textContent = textContentValue;\r\n         }\r\n      };\r\n\r\n      window.game.cards.push(checkDataSetId());\r\n\r\n      const fragment = document.createDocumentFragment();\r\n\r\n      const cardWrapper = document.createElement('div');\r\n      addClass(['game__card-wrapper', 'flip'], cardWrapper);\r\n      addDataAttrs({ dignity: dignityValue, suit: suitName }, cardWrapper);\r\n      addId(cardWrapper, checkDataSetId());\r\n\r\n      setTimeout(() => {\r\n         cardWrapper.classList.remove('flip');\r\n      }, 5000);\r\n\r\n      const card = document.createElement('div');\r\n      addClass(['game__card'], card);\r\n      addDataAttrs({ id: checkDataSetId() }, card);\r\n\r\n      const cardBack = document.createElement('div');\r\n      addClass(['game__card-back'], cardBack);\r\n      addDataAttrs({ id: checkDataSetId() }, cardBack);\r\n\r\n      const cardFront = document.createElement('div');\r\n      addClass(['game__card-front'], cardFront);\r\n      addDataAttrs({ id: checkDataSetId(), active: 'true' }, cardFront);\r\n\r\n      const indexBox = document.createElement('div');\r\n      addClass(['game__card-index-box'], indexBox);\r\n\r\n      const dignity = document.createElement('div');\r\n      addClass(['game__card-dignity'], dignity);\r\n      addTextContent(dignityValue, dignity);\r\n      addDataAttrs({ id: checkDataSetId(), active: 'true' }, dignity);\r\n\r\n      const suitSmallIcon = document.createElement('img');\r\n      addClass(['game__card-suit'], suitSmallIcon);\r\n      addSrc(smallIcon, suitSmallIcon);\r\n      addDataAttrs({ id: checkDataSetId(), active: 'true' }, suitSmallIcon);\r\n\r\n      const dignityReverse = document.createElement('div');\r\n      addClass(['game__card-dignity'], dignityReverse);\r\n      addTextContent(dignityValue, dignityReverse);\r\n\r\n      const suitSmallIconReverse = document.createElement('img');\r\n      addClass(['game__card-suit'], suitSmallIconReverse);\r\n      addSrc(smallIcon, suitSmallIconReverse);\r\n\r\n      const suitBigIcon = document.createElement('img');\r\n      addClass(['game__card-suit-big'], suitBigIcon);\r\n      addSrc(bigIcon, suitBigIcon);\r\n      addStyle({ width: '29', height: '26' }, suitBigIcon);\r\n      addDataAttrs({ id: checkDataSetId(), active: 'true' }, suitBigIcon);\r\n\r\n      const indexBoxReverse = document.createElement('div');\r\n      indexBoxReverse.classList.add(\r\n         'game__card-index-box',\r\n         'game__card-index-box__rotate'\r\n      );\r\n\r\n      cardFront.appendChild(indexBox);\r\n      cardFront.appendChild(suitBigIcon);\r\n      cardFront.appendChild(indexBoxReverse);\r\n      indexBox.appendChild(dignity);\r\n      indexBox.appendChild(suitSmallIcon);\r\n      indexBoxReverse.appendChild(dignityReverse);\r\n      indexBoxReverse.appendChild(suitSmallIconReverse);\r\n\r\n      card.appendChild(cardBack);\r\n      card.appendChild(cardFront);\r\n\r\n      cardWrapper.appendChild(card);\r\n\r\n      fragment.appendChild(cardWrapper);\r\n\r\n      this.cardField = document.getElementById('card-field');\r\n\r\n      if (this.cardField) {\r\n         this.cardField.appendChild(fragment);\r\n      }\r\n   }\r\n\r\n   shuffleCards(array: object[]) {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n         let randomIndex = Math.floor(Math.random() * (i + 1));\r\n         [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\r\n      }\r\n      return array;\r\n   }\r\n\r\n   renderCard() {\r\n      let cardValues = GameRender.templateCard;\r\n      const difficulty = Number(window.game.difficulty);\r\n      const numberOfCards = this.cardsByDifficulty[difficulty];\r\n      let cardValues2: CardsObject[] = this.shuffleCards(\r\n         cardValues\r\n      ) as CardsObject[];\r\n\r\n      cardValues2 = cardValues2.slice(0, numberOfCards);\r\n      cardValues2.push(...cardValues2);\r\n      cardValues2 = this.shuffleCards(cardValues2) as CardsObject[];\r\n\r\n      cardValues2.forEach((card) => {\r\n         this.createCard(\r\n            card.dignity,\r\n            card.suit.src,\r\n            card.suit.srcBigIcon,\r\n            card.suit.name\r\n         );\r\n      });\r\n   }\r\n}\r\n\r\nGameRender.templateCard = [\r\n   {\r\n      dignity: 'A',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'K',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'Q',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'J',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '10',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '9',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '8',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '7',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '6',\r\n      suit: {\r\n         name: 'spades',\r\n         src: './public/img/spades.svg',\r\n         srcBigIcon: './public/img/spades-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'A',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'K',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'Q',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'J',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '10',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '9',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '8',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '7',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '6',\r\n      suit: {\r\n         name: 'hearts',\r\n         src: './public/img/hearts.svg',\r\n         srcBigIcon: './public/img/hearts-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'A',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'K',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'Q',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'J',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '10',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '9',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '8',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '7',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '6',\r\n      suit: {\r\n         name: 'diamonds',\r\n         src: './public/img/diamonds.svg',\r\n         srcBigIcon: './public/img/diamonds-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'A',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'K',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'Q',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: 'J',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '10',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '9',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '8',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '7',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n   {\r\n      dignity: '6',\r\n      suit: {\r\n         name: 'clubs',\r\n         src: './public/img/clubs.svg',\r\n         srcBigIcon: './public/img/clubs-big.svg',\r\n      },\r\n   },\r\n];\r\n","import GameRender from './render';\r\n\r\nimport { Game } from './types';\r\n\r\nif (!sessionStorage.getItem('status')) {\r\n   sessionStorage.setItem('status', 'start');\r\n}\r\n\r\ndeclare global {\r\n   interface Window {\r\n      game: Game;\r\n   }\r\n}\r\n\r\nwindow.game = {\r\n   status: sessionStorage.getItem('status'),\r\n   difficulty: '1',\r\n   cards: [],\r\n   timer: [],\r\n} as Game;\r\n\r\nconst renderScreens = new GameRender();\r\n\r\nexport default class GameEvent {\r\n   container = document.getElementById('container') as HTMLElement;\r\n   startGameButton = document.getElementById('start-game') as HTMLElement;\r\n   clickCount: number = 0;\r\n   compare: string[] = [];\r\n   resultStatus: HTMLElement | null = null;\r\n   resultIcon: HTMLElement | null = null;\r\n   resultTime: HTMLElement | null = null;\r\n   timerValue: HTMLElement | null = null;\r\n\r\n   constructor() {\r\n      this.startGameButton.addEventListener('click', (event) => {\r\n         event.preventDefault();\r\n\r\n         const { target } = event;\r\n\r\n         if (target) {\r\n            this.checkDifficulty();\r\n         }\r\n      });\r\n\r\n      this.container.addEventListener('click', (event) => {\r\n         const target = event.target as HTMLButtonElement;\r\n\r\n         this.cardClickHandler(target);\r\n         this.restartGame(target);\r\n      });\r\n   }\r\n\r\n   checkDifficulty() {\r\n      const difficultyField: HTMLElement | null =\r\n         document.getElementById('difficulty-field');\r\n\r\n      if (difficultyField) {\r\n         difficultyField.childNodes.forEach((node) => {\r\n            if (\r\n               (node as HTMLInputElement).type === 'radio' &&\r\n               (node as HTMLInputElement).checked\r\n            ) {\r\n               window.game.difficulty = (node as HTMLInputElement).value;\r\n            }\r\n         });\r\n      }\r\n\r\n      renderScreens.startGame();\r\n      this.timer();\r\n   }\r\n\r\n   cardClickHandler(target: HTMLElement | null) {\r\n      if (target && target.dataset.id) {\r\n         if (target.dataset.active) {\r\n            return;\r\n         }\r\n\r\n         this.clickCount++;\r\n\r\n         const currentCard: HTMLElement | null = document.getElementById(\r\n            target.dataset.id\r\n         );\r\n\r\n         if (currentCard) {\r\n            currentCard.classList.toggle('flip');\r\n            target.dataset.active = 'true';\r\n         }\r\n\r\n         const cardIndexOfArray = window.game.cards.indexOf(target.dataset.id);\r\n\r\n         if (cardIndexOfArray === -1) {\r\n            return;\r\n         }\r\n         window.game.cards.splice(cardIndexOfArray, 1);\r\n\r\n         this.compare.push(target.dataset.id);\r\n\r\n         this.checkResult();\r\n      }\r\n   }\r\n\r\n   checkResult() {\r\n      const [firstCard, secondCard] = this.compare;\r\n      if (this.clickCount === 2) {\r\n         secondCard.startsWith(firstCard) || firstCard.startsWith(secondCard)\r\n            ? (this.clickCount = 0)\r\n            : setTimeout(() => {\r\n                 renderScreens.renderResultScreen();\r\n                 this.stopTimer();\r\n                 this.showLostResult();\r\n              }, 100);\r\n         this.clickCount = 0;\r\n         this.compare = [];\r\n      }\r\n\r\n      if (!window.game.cards.length) {\r\n         setTimeout(() => {\r\n            renderScreens.renderResultScreen();\r\n            this.stopTimer();\r\n            this.showWinResult();\r\n         }, 500);\r\n      }\r\n   }\r\n\r\n   restartGame(target: HTMLButtonElement | null) {\r\n      if (target && target.id === 'restart') {\r\n         renderScreens.restartGame();\r\n         window.game.cards = [];\r\n      }\r\n   }\r\n\r\n   timer() {\r\n      let timerField: HTMLElement | null = document.getElementById('timer');\r\n      setTimeout(() => {\r\n         let startTimer = new Date();\r\n\r\n         const timerUpdate = (ms: number) => {\r\n            if (timerField) {\r\n               timerField.innerHTML = new Date(ms).toISOString().slice(14, 19);\r\n            }\r\n         };\r\n\r\n         window.game.timer.push(\r\n            setInterval(\r\n               () => timerUpdate(new Date().getTime() - startTimer.getTime()),\r\n               500\r\n            )\r\n         );\r\n      }, 5000);\r\n   }\r\n\r\n   stopTimer() {\r\n      window.game.timer.map(\r\n         (timer: string | number | NodeJS.Timeout | undefined) =>\r\n            clearInterval(timer)\r\n      );\r\n      window.game.timer = [];\r\n   }\r\n\r\n   showLostResult() {\r\n      this.resultStatus = document.getElementById('result-status');\r\n      this.resultIcon = document.getElementById('result-icon');\r\n      this.resultTime = document.getElementById('result-time');\r\n      this.timerValue = document.getElementById('timer');\r\n\r\n      if (this.resultStatus && this.resultIcon) {\r\n         this.resultStatus.textContent = 'Вы проиграли!';\r\n         (this.resultIcon as HTMLImageElement).src = '../public/img/lost.svg';\r\n      }\r\n\r\n      if (this.resultTime && this.timerValue) {\r\n         this.resultTime.textContent = this.timerValue.textContent;\r\n      }\r\n   }\r\n\r\n   showWinResult() {\r\n      this.resultTime = document.getElementById('result-time');\r\n      this.timerValue = document.getElementById('timer');\r\n\r\n      if (this.resultTime && this.timerValue) {\r\n         this.resultTime.textContent = this.timerValue.textContent;\r\n      }\r\n   }\r\n}\r\n\r\nrenderScreens.checkGameStatus();\r\n","import './render.ts';\r\nimport './game.ts';\r\nimport './style/style.css';\r\nimport GameRender from './render';\r\nimport GameEvent from './game';\r\n\r\nnew GameRender();\r\nnew GameEvent();\r\n"],"names":["container","document","getElementById","cardsByDifficulty","difficultyForm","templateItem","clone","gameScreen","resultScreen","cardField","checkGameStatus","window","game","status","this","renderScreen","classList","remove","templateName","HTMLTemplateElement","content","cloneNode","appendChild","startGame","add","renderCard","renderResultScreen","restartGame","createCard","dignityValue","smallIcon","bigIcon","suitName","checkDataSetId","datIdName","addClass","classArray","element","length","addDataAttrs","objectOfAttrs","key","dataset","addSrc","srcValue","src","addTextContent","textContentValue","textContent","cards","push","idValue","fragment","createDocumentFragment","cardWrapper","createElement","dignity","suit","id","setTimeout","card","cardBack","cardFront","active","indexBox","suitSmallIcon","dignityReverse","suitSmallIconReverse","suitBigIcon","objectOfStyles","addStyle","width","height","indexBoxReverse","shuffleCards","array","i","randomIndex","Math","floor","random","cardValues","GameRender","templateCard","difficulty","Number","numberOfCards","cardValues2","slice","forEach","srcBigIcon","name","sessionStorage","getItem","setItem","timer","renderScreens","startGameButton","clickCount","compare","resultStatus","resultIcon","resultTime","timerValue","addEventListener","event","preventDefault","checkDifficulty","target","cardClickHandler","difficultyField","childNodes","node","type","checked","value","currentCard","toggle","cardIndexOfArray","indexOf","splice","checkResult","firstCard","secondCard","startsWith","stopTimer","showLostResult","showWinResult","timerField","startTimer","Date","setInterval","ms","getTime","innerHTML","toISOString","map","clearInterval"],"sourceRoot":""}