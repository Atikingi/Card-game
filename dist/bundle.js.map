{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card-game/./src/render.js","webpack://card-game/./src/game.js"],"sourcesContent":["export default class GameRender {\n   container = document.getElementById('container');\n   cardsByDifficulty = [3, 6, 12];\n\n   constructor() {\n      this.checkGameStatus();\n   }\n\n   checkGameStatus() {\n      if (window.game.status === 'start') {\n         this.renderScreen('template-difficulty');\n\n         this.difficultyForm = document.getElementById('difficulty-form');\n         this.difficultyForm.classList.remove('game__difficulty__hidden');\n      }\n   }\n\n   renderScreen(templateName) {\n      const templateItem = document.getElementById(templateName);\n      const clone = templateItem.content.cloneNode(true);\n\n      this.container.appendChild(clone);\n   }\n\n   startGame() {\n      this.difficultyForm.classList.add('game__difficulty__hidden');\n\n      window.game.status = 'game';\n\n      this.renderScreen('template-game');\n\n      this.renderCard();\n   }\n\n   playAgain() {\n      document.getElementById('card-field').innerHTML = '';\n      this.renderCard();\n   }\n\n   createCard(dignityValue, smallIcon, bigIcon, suitName) {\n      const checkDataSetId = () => {\n         const datIdName = suitName + dignityValue;\n         return document.getElementById(datIdName)\n            ? datIdName + 'double'\n            : datIdName;\n      };\n\n      const addElementProperties = (\n         element,\n         elementClass,\n         dataDignity,\n         dataSuit,\n         id\n      ) => {\n         element.classList.add(elementClass);\n         element.dataset.dignity = dataDignity;\n         element.dataset.suit = dataSuit;\n         element.id = id;\n      };\n\n      const addDataAttrs = (object, element) => {\n         if (typeof object === Object) {\n            for (let key of object) {\n               element.dataset.key = object[key];\n            }\n         }\n      };\n\n      window.game.cards.push(checkDataSetId());\n\n      const fragment = document.createDocumentFragment();\n\n      const cardWrapper = document.createElement('div');\n      addElementProperties(\n         cardWrapper,\n         'game__card-wrapper',\n         dignityValue,\n         suitName,\n         checkDataSetId()\n      );\n      // cardWrapper.classList.add('game__card-wrapper');\n      // cardWrapper.dataset.dignity = dignityValue;\n      // cardWrapper.dataset.suit = suitName;\n      // cardWrapper.id = checkDataSetId();\n      cardWrapper.classList.add('flip');\n\n      setTimeout(() => {\n         cardWrapper.classList.remove('flip');\n      }, 5000);\n\n      const card = document.createElement('div');\n      card.classList.add('game__card');\n      card.dataset.id = checkDataSetId();\n\n      const cardBack = document.createElement('div');\n      cardBack.classList.add('game__card-back');\n      cardBack.dataset.id = checkDataSetId();\n\n      const cardFront = document.createElement('div');\n      cardFront.classList.add('game__card-front');\n      cardFront.dataset.id = checkDataSetId();\n      cardFront.dataset.active = true;\n      addDataAttrs({ id: checkDataSetId(), active: true }, cardFront);\n\n      const indexBox = document.createElement('div');\n      indexBox.classList.add('game__card-index-box');\n\n      const dignity = document.createElement('div');\n      dignity.classList.add('game__card-dignity');\n      dignity.textContent = dignityValue;\n      dignity.dataset.id = checkDataSetId();\n      dignity.dataset.active = true;\n\n      const suitSmallIcon = document.createElement('img');\n      suitSmallIcon.classList.add('game__card-suit');\n      suitSmallIcon.src = smallIcon;\n      suitSmallIcon.dataset.id = checkDataSetId();\n      suitSmallIcon.dataset.active = true;\n\n      const dignityReverse = document.createElement('div');\n      dignityReverse.classList.add('game__card-dignity');\n      dignityReverse.textContent = dignityValue;\n\n      const suitSmallIconReverse = document.createElement('img');\n      suitSmallIconReverse.classList.add('game__card-suit');\n      suitSmallIconReverse.src = smallIcon;\n\n      const suitBigIcon = document.createElement('img');\n      suitBigIcon.classList.add('game__card-suit-big');\n      suitBigIcon.src = bigIcon;\n      suitBigIcon.style.width = '29';\n      suitBigIcon.style.height = '26';\n      suitBigIcon.dataset.id = checkDataSetId();\n      suitBigIcon.dataset.active = true;\n\n      const indexBoxReverse = document.createElement('div');\n      indexBoxReverse.classList.add(\n         'game__card-index-box',\n         'game__card-index-box__rotate'\n      );\n\n      cardFront.appendChild(indexBox);\n      cardFront.appendChild(suitBigIcon);\n      cardFront.appendChild(indexBoxReverse);\n      indexBox.appendChild(dignity);\n      indexBox.appendChild(suitSmallIcon);\n      indexBoxReverse.appendChild(dignityReverse);\n      indexBoxReverse.appendChild(suitSmallIconReverse);\n\n      card.appendChild(cardBack);\n      card.appendChild(cardFront);\n\n      cardWrapper.appendChild(card);\n\n      fragment.appendChild(cardWrapper);\n\n      this.cardField = document.getElementById('card-field');\n\n      this.cardField.appendChild(fragment);\n   }\n\n   shuffleCards(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n         let randomIndex = Math.floor(Math.random() * (i + 1));\n         [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\n      }\n      return array;\n   }\n\n   renderCard() {\n      let cardValues = GameRender.templateCard;\n      const difficulty = Number(window.game.difficulty);\n      const numberOfCards = this.cardsByDifficulty[difficulty];\n\n      cardValues = this.shuffleCards(cardValues);\n      cardValues = cardValues.slice(0, numberOfCards);\n      cardValues.push(...cardValues);\n      cardValues = this.shuffleCards(cardValues);\n\n      cardValues.forEach((card) => {\n         this.createCard(\n            card.dignity,\n            card.suit.src,\n            card.suit.srcBigIcon,\n            card.suit.name\n         );\n      });\n   }\n}\n\nGameRender.templateCard = [\n   {\n      dignity: 'A',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: 'K',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: 'Q',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: 'J',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: '10',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: '9',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: '8',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: '7',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: '6',\n      suit: {\n         name: 'spades',\n         src: './public/img/spades.svg',\n         srcBigIcon: './public/img/spades-big.svg',\n      },\n   },\n   {\n      dignity: 'A',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: 'K',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: 'Q',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: 'J',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: '10',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: '9',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: '8',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: '7',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: '6',\n      suit: {\n         name: 'hearts',\n         src: './public/img/hearts.svg',\n         srcBigIcon: './public/img/hearts-big.svg',\n      },\n   },\n   {\n      dignity: 'A',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: 'K',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: 'Q',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: 'J',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: '10',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: '9',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: '8',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: '7',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: '6',\n      suit: {\n         name: 'diamonds',\n         src: './public/img/diamonds.svg',\n         srcBigIcon: './public/img/diamonds-big.svg',\n      },\n   },\n   {\n      dignity: 'A',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: 'K',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: 'Q',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: 'J',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: '10',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: '9',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: '8',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: '7',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n   {\n      dignity: '6',\n      suit: {\n         name: 'clubs',\n         src: './public/img/clubs.svg',\n         srcBigIcon: './public/img/clubs-big.svg',\n      },\n   },\n];\n","import GameRender from '/src/render.js';\n\nif (!sessionStorage.getItem('status')) {\n   sessionStorage.setItem('status', 'start');\n}\n\nwindow.game = {\n   status: sessionStorage.getItem('status'),\n   difficulty: '1',\n   cards: [],\n};\n\nconst renderScreens = new GameRender();\n\nclass GameEvent {\n   container = document.getElementById('container');\n   clickCount = 0;\n   compare = [];\n\n   constructor() {\n      document\n         .getElementById('start-game')\n         .addEventListener('click', (event) => {\n            event.preventDefault();\n\n            this.checkDifficulty(event);\n         });\n\n      this.container.addEventListener('click', (event) => {\n         this.cardClickHandler(event.target);\n      });\n   }\n\n   checkDifficulty({ target }) {\n      const difficultyField = document.getElementById('difficulty-field');\n\n      difficultyField.childNodes.forEach((node) => {\n         if (node.type === 'radio' && node.checked) {\n            window.game.difficulty = node.value;\n         }\n      });\n\n      renderScreens.startGame(target);\n   }\n\n   cardClickHandler(target) {\n      if (target.dataset.id) {\n         if (target.dataset.active) {\n            return;\n         }\n\n         this.clickCount++;\n\n         document.getElementById(target.dataset.id).classList.toggle('flip');\n         target.dataset.active = true;\n\n         const cardIndexOfArray = window.game.cards.indexOf(target.dataset.id);\n\n         if (cardIndexOfArray === -1) {\n            return;\n         }\n         window.game.cards.splice(cardIndexOfArray, 1);\n\n         this.compare.push(target.dataset.id);\n\n         this.checkResult();\n      }\n   }\n\n   checkResult() {\n      const [firstCard, secondCard] = this.compare;\n      if (this.clickCount === 2) {\n         secondCard.startsWith(firstCard) || firstCard.startsWith(secondCard)\n            ? (this.clickCount = 0)\n            : setTimeout(() => {\n                 alert('Вы проиграли');\n              }, 100);\n         this.clickCount = 0;\n         this.compare = [];\n      }\n\n      if (!window.game.cards.length) {\n         setTimeout(() => {\n            alert('Вы победили!');\n         }, 500);\n      }\n   }\n}\n\nnew GameEvent();\n"],"names":["GameRender","container","document","getElementById","cardsByDifficulty","constructor","this","checkGameStatus","window","game","status","renderScreen","difficultyForm","classList","remove","templateName","clone","content","cloneNode","appendChild","startGame","add","renderCard","playAgain","innerHTML","createCard","dignityValue","smallIcon","bigIcon","suitName","checkDataSetId","datIdName","cards","push","fragment","createDocumentFragment","cardWrapper","createElement","element","dataDignity","dataSuit","id","dataset","dignity","suit","setTimeout","card","cardBack","cardFront","active","object","Object","key","addDataAttrs","indexBox","textContent","suitSmallIcon","src","dignityReverse","suitSmallIconReverse","suitBigIcon","style","width","height","indexBoxReverse","cardField","shuffleCards","array","i","length","randomIndex","Math","floor","random","cardValues","templateCard","difficulty","Number","numberOfCards","slice","forEach","srcBigIcon","name","sessionStorage","getItem","setItem","renderScreens","clickCount","compare","addEventListener","event","preventDefault","checkDifficulty","cardClickHandler","target","childNodes","node","type","checked","value","toggle","cardIndexOfArray","indexOf","splice","checkResult","firstCard","secondCard","startsWith","alert"],"sourceRoot":""}